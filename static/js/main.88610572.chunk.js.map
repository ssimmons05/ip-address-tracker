{"version":3,"sources":["components/BottomSection.js","components/TopSection.js","components/SearchBar.js","components/InfoBox.js","App.js","index.js"],"names":["BottomSection","position","id","MapContainer","style","height","zIndex","center","zoom","scrollWheelZoom","MapConsumer","map","setView","TileLayer","attribution","url","Marker","Popup","TopSection","className","SearchBar","setLatitude","setLongitude","setInfo","setIPAddress","IPAddress","useEffect","fetch","then","res","json","data","location","lat","lng","onSubmit","event","preventDefault","console","log","placeholder","onChange","target","value","type","InfoBox","info","ip","isp","city","region","postalCode","timezone","App","useState","longitude","latitude","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAyCeA,EArCO,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEpB,OAEC,qBAAKC,GAAK,MAAV,SACC,eAACC,EAAA,EAAD,CACEC,MAAO,CAACC,OAAQ,OAAQC,OAAQ,MAChCC,OAAQN,EACRO,KAAM,GACNC,iBAAiB,EAJnB,UAME,cAACC,EAAA,EAAD,UACG,SAACC,GAGA,OAFAA,EAAIC,QAAQX,GAEL,IACR,IAGH,cAACY,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQf,SAAUA,EAAlB,SACE,eAACgB,EAAA,EAAD,kCAEG,IACD,uBACC,IAJH,gCAWT,EC5BcC,EARI,WACf,OACI,qBAAKC,UAAY,aAAjB,SACI,qDAGX,ECwCcC,EA9CG,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAQ5DV,EAAG,yFAAqFU,GA8B9F,OA3BAC,qBAAU,WAKNC,MAAMZ,GACLa,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACHR,EAAQQ,GACRV,EAAYU,EAAKC,SAASC,KAC1BX,EAAaS,EAAKC,SAASE,IAC9B,GATJ,GAAC,IA0BE,uBAAMf,UAAU,YAAYgB,SAbhC,SAAiBC,GACbA,EAAMC,iBACNC,QAAQC,IAAId,GACZE,MAAMZ,GACDa,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACHR,EAAQQ,GACRV,EAAYU,EAAKC,SAASC,KAC1BX,EAAaS,EAAKC,SAASE,IAC9B,GACR,EAGG,UACI,uBAAOhC,GAAG,QAAQsC,YAAY,0BAA0BC,SApC9C,SAACL,GACfZ,EAAaY,EAAMM,OAAOC,MAC7B,IAmCO,wBAAQC,KAAK,SAAS1C,GAAG,UAAzB,sBAGX,ECpBkB2C,EAzBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEhB,OACE,qBAAK5C,GAAG,SAASiB,UAAW,UAA5B,SACE,gCACE,qBAAIjB,GAAG,WAAP,UACI,4CACA,qCACA,0CACA,qDAGF4C,EAAKd,UACP,qBAAI9B,GAAG,cAAP,UACE,6BAAK4C,EAAKC,KACV,6BAAKD,EAAKE,MACV,6BAAKF,EAAKd,SAASiB,KAAO,KAAOH,EAAKd,SAASkB,OAAS,IAAMJ,EAAKd,SAASmB,aAC5E,6BAAKL,EAAKd,SAASoB,kBAM5B,ECDUC,EAjBD,WAEV,MAAkCC,mBAAS,IAA3C,mBAAO7B,EAAP,KAAkBD,EAAlB,KACA,EAAwB8B,mBAAS,CAAC,GAAlC,mBAAOR,EAAP,KAAavB,EAAb,KACA,EAAkC+B,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBjC,EAAlB,KACA,EAAgCgC,mBAAS,GAAzC,mBAAOE,EAAP,KAAiBnC,EAAjB,KAEA,OACA,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWG,aAAcA,EAAcF,aAAcA,EAAcD,YAAaA,EAAaE,QAASA,EAASE,UAAWA,IAC1H,cAAC,EAAD,CAASqB,KAAMA,IACf,cAAC,EAAD,CAAe7C,SAAU,CAACuD,EAAUD,OAGvC,EChBHE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.88610572.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup, MapConsumer, useMap } from 'react-leaflet'\r\nimport '../App.css'\r\n\r\nconst BottomSection = ({position}) => { \r\n\r\n    return(\r\n    \r\n     <div id = \"map\">\r\n      <MapContainer\r\n        style={{height: \"75vh\", zIndex: \"-2\"}}\r\n        center={position}\r\n        zoom={13}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <MapConsumer>\r\n          {(map) => {\r\n            map.setView(position);\r\n            // console.log('map center:', map.getCenter());\r\n            return null;\r\n          }}\r\n        </MapConsumer>\r\n\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup.\r\n            {' '}\r\n            <br />\r\n            {' '}\r\n            Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n    </MapContainer>\r\n  </div>\r\n  )\r\n}\r\n    \r\nexport default BottomSection\r\n","import React from 'react'\r\nimport \"../App.css\"\r\n\r\nconst TopSection = () => {\r\n    return (\r\n        <div className = \"topSection\">\r\n            <h1>IP Address Tracker</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopSection\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"../App.css\"\r\n\r\nconst SearchBar = ({setLatitude, setLongitude, setInfo, setIPAddress, IPAddress}) => {\r\n\r\n\r\n    //Updating the state of the IPAddress each time the user types in the input field.\r\n    const takeInput = (event) => {\r\n        setIPAddress(event.target.value);\r\n    }\r\n\r\n    const url = `https://geo.ipify.org/api/v1?apiKey=at_9266dgV17onwJseGusY9R1eYLhtne&ipAddress=${IPAddress}`\r\n\r\n    //Making a fetch request to the API on initial page load to display the user's API info.\r\n    useEffect(() => {\r\n        runFirstTime();\r\n    },[]);\r\n\r\n    function runFirstTime() {\r\n        fetch(url)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setInfo(data);\r\n            setLatitude(data.location.lat);\r\n            setLongitude(data.location.lng);\r\n        })\r\n    }\r\n\r\n    //Fetches data from the API after the user clicks the submit button.\r\n    function getText(event) {\r\n        event.preventDefault();\r\n        console.log(IPAddress);\r\n        fetch(url)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setInfo(data);\r\n                setLatitude(data.location.lat);\r\n                setLongitude(data.location.lng);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <form className=\"searchBar\" onSubmit={getText}>\r\n            <input id=\"input\" placeholder=\"  Enter your IP address\" onChange={takeInput} />\r\n            <button type=\"submit\" id=\"getText\">Submit</button>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import \"../App.css\"\r\n\r\n    const InfoBox = ({info}) => {\r\n      \r\n      return (\r\n        <div id=\"output\" className =\"infoBox\">\r\n          <div>\r\n            <ul id=\"headings\">\r\n                <h5>IP Address</h5>\r\n                <h5>ISP</h5>                                                        \r\n                <h5>Location</h5>                           \r\n                <h5>TimeZone Address</h5>   \r\n            </ul>\r\n                \r\n            { info.location &&  \r\n            <ul id=\"information\">\r\n              <li>{info.ip}</li>\r\n              <li>{info.isp}</li>\r\n              <li>{info.location.city + \", \" + info.location.region + \" \" + info.location.postalCode}</li>\r\n              <li>{info.location.timezone}</li>\r\n            </ul>\r\n            } \r\n          </div>   \r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InfoBox \r\n    \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n    //  // const [Address, setAddress] = useState(\"8.8.8.8\")\r\n    //  const [information, setInformation] = useState([]);\r\n    //  useEffect(() => {\r\n    //    fetch(\"https://geo.ipify.org/api/v1?apiKey=at_9266dgV17onwJseGusY9R1eYLhtne&ipAddress=8.8.8.8\")\r\n    //    .then((result) => {\r\n    //      result.json().then((resp) => {\r\n    //      setInformation(resp)\r\n    //      })\r\n    //    })\r\n    //  }, [])\r\n    //  let allData = Object.values(information);\r\n    //  console.log(allData);\r\n    //  // let latitude = info.location.lat;\r\n    //  // let longitude = info.location.lng;\r\n    //  // console.log(longitude, latitude);\r\n   \r\n    //  return (\r\n    //  <div> \r\n    //      <h6>IPADDRESS</h6>\r\n    //      <h6>LOCATION</h6>\r\n    //      <h6>TIMEZONE</h6>\r\n    //      <h6>ISP</h6>\r\n    //      { allData.map((data) =>\r\n    //       <ul>\r\n               \r\n    //            <li>{data.ip}</li>\r\n               \r\n    //            <li>{data.location}</li>\r\n               \r\n    //            <li>{data.timezone}</li>\r\n               \r\n    //            <li>{data.isp}</li>\r\n    //        </ul>\r\n       \r\n    //      )}\r\n       \r\n    //    </div>   )}\r\n    \r\n    \r\n    \r\n\r\n\r\n// export default InfoBox\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css'\r\nimport BottomSection from './components/BottomSection.js'\r\nimport TopSection from './components/TopSection.js'\r\nimport SearchBar from './components/SearchBar.js'\r\nimport InfoBox from './components/InfoBox.js'\r\n\r\n  const App = () => {\r\n    \r\n    const [IPAddress, setIPAddress] = useState(''); //defualt state is the local computer's IP address)\r\n    const [info, setInfo] = useState({});\r\n    const [longitude, setLongitude] = useState(0);\r\n    const [latitude, setLatitude] = useState(0);\r\n\r\n    return ( \r\n    <div> \r\n      <TopSection />\r\n      <SearchBar setIPAddress={setIPAddress} setLongitude={setLongitude} setLatitude={setLatitude} setInfo={setInfo} IPAddress={IPAddress} />\r\n      <InfoBox info={info}/>\r\n      <BottomSection position={[latitude, longitude]} />\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import './App.css';\r\n// import List from './components/List';\r\n// import WithListLoading from './components/WithListLoading';\r\n\r\n\r\n// function App() {\r\n//   const ListLoading = WithListLoading(List);\r\n//   const [appState, setAppState] = useState({loading: false, repos: null});\r\n\r\n//   useEffect(() => {\r\n//     setAppState({ loading: true });\r\n//     const apiUrl = `https://api.github.com/users/hacktivist123/repos`;\r\n//     fetch(apiUrl)\r\n//       .then((res) => res.json())\r\n//       .then((repos) => {\r\n//         setAppState({ loading: false, repos: repos });\r\n//       });\r\n//   }, [setAppState]);\r\n\r\n//   return (\r\n//     <div className='App'>\r\n//       <div className='container'>\r\n//         <h1>My Repositories</h1>\r\n//       </div>\r\n//       <div className='repo-container'>\r\n//         <ListLoading isLoading={appState.loading} repos={appState.repos} />\r\n//       </div>\r\n//       <footer>\r\n//         <div className='footer'>\r\n//           Built with {' '}\r\n//           <span role='img' aria-label='love'>\r\n//             💚\r\n//           </span>{' '}\r\n//           by Shedrack Akintayo\r\n//         </div>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}